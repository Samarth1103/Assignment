{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/ProjectCard.js"],"sourcesContent":["import Image from 'next/image';\r\n\r\n/**\r\n * ProjectCard component displays a single project's information.\r\n * It takes a 'project' object as a prop, which should contain:\r\n * - _id: Unique identifier (for key prop)\r\n * - name: Project's name\r\n * - description: Project's description\r\n * - imageUrl: URL to the stored image\r\n */\r\nconst ProjectCard = ({ project }) => {\r\n  return (\r\n    <div className=\"project-card\">\r\n      {/* Use Image component for optimization */}\r\n      <Image\r\n        src={`http://localhost:5000${project.imageUrl}`} // Ensure this matches your backend's image serving path\r\n        alt={project.name}\r\n        width={450} // Width after cropping (as per requirement example)\r\n        height={350} // Height after cropping (as per requirement example)\r\n        className=\"project-card-image\" // Apply image class\r\n        onError={(e) => {\r\n          e.target.onerror = null; // Prevents infinite loop if fallback also fails\r\n          e.target.src = `https://placehold.co/450x350/CCCCCC/000000?text=No+Image`; // Fallback placeholder\r\n        }}\r\n      />\r\n      <div className=\"project-card-content\">\r\n        <h3>{project.name}</h3>\r\n        <p>{project.description}</p>\r\n        <button className=\"project-card-button\" disabled>Read More</button> {/* Dummy button */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA;;;;;;;CAOC,GACD,MAAM,cAAc,CAAC,EAAE,OAAO,EAAE;IAC9B,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC,sHAAA,CAAA,UAAK;gBACJ,KAAK,CAAC,qBAAqB,EAAE,QAAQ,QAAQ,EAAE;gBAC/C,KAAK,QAAQ,IAAI;gBACjB,OAAO;gBACP,QAAQ;gBACR,WAAU,qBAAqB,oBAAoB;;gBACnD,SAAS,CAAC;oBACR,EAAE,MAAM,CAAC,OAAO,GAAG,MAAM,gDAAgD;oBACzE,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,wDAAwD,CAAC,EAAE,uBAAuB;gBACpG;;;;;;0BAEF,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;kCAAI,QAAQ,IAAI;;;;;;kCACjB,qKAAC;kCAAG,QAAQ,WAAW;;;;;;kCACvB,qKAAC;wBAAO,WAAU;wBAAsB,QAAQ;kCAAC;;;;;;oBAAkB;;;;;;;;;;;;;AAI3E;uCAEe","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/ClientCard.js"],"sourcesContent":["import Image from 'next/image';\r\n\r\n/**\r\n * ClientCard component displays a single client's information.\r\n * It takes a 'client' object as a prop, which should contain:\r\n * - _id: Unique identifier (for key prop)\r\n * - name: Client's name\r\n * - description: Client's testimonial or brief\r\n * - designation: Client's job title/designation\r\n * - imageUrl: URL to the stored image\r\n */\r\nconst ClientCard = ({ client }) => {\r\n  return (\r\n    <div className=\"client-card\">\r\n      {/* Image component for optimized image loading */}\r\n      <div className=\"client-card-image-container\">\r\n        <Image\r\n          src={`http://localhost:5000${client.imageUrl}`} // Ensure this matches your backend's image serving path\r\n          alt={client.name}\r\n          width={100}\r\n          height={100}\r\n          objectFit=\"cover\" // Ensures the image covers the circular area\r\n          onError={(e) => {\r\n            e.target.onerror = null; // Prevents infinite loop if fallback also fails\r\n            e.target.src = `https://placehold.co/100x100/CCCCCC/000000?text=No+Image`; // Fallback placeholder\r\n          }}\r\n        />\r\n      </div>\r\n      <p className=\"client-card-description\">\"{client.description}\"</p>\r\n      <h3 className=\"client-card-name\">{client.name}</h3>\r\n      <p className=\"client-card-designation\">{client.designation}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA;;;;;;;;CAQC,GACD,MAAM,aAAa,CAAC,EAAE,MAAM,EAAE;IAC5B,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC,sHAAA,CAAA,UAAK;oBACJ,KAAK,CAAC,qBAAqB,EAAE,OAAO,QAAQ,EAAE;oBAC9C,KAAK,OAAO,IAAI;oBAChB,OAAO;oBACP,QAAQ;oBACR,WAAU,QAAQ,6CAA6C;;oBAC/D,SAAS,CAAC;wBACR,EAAE,MAAM,CAAC,OAAO,GAAG,MAAM,gDAAgD;wBACzE,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,wDAAwD,CAAC,EAAE,uBAAuB;oBACpG;;;;;;;;;;;0BAGJ,qKAAC;gBAAE,WAAU;;oBAA0B;oBAAE,OAAO,WAAW;oBAAC;;;;;;;0BAC5D,qKAAC;gBAAG,WAAU;0BAAoB,OAAO,IAAI;;;;;;0BAC7C,qKAAC;gBAAE,WAAU;0BAA2B,OAAO,WAAW;;;;;;;;;;;;AAGhE;uCAEe","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/ContactForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n/**\r\n * ContactForm component allows users to submit their contact details.\r\n * It takes an 'onSubmit' prop, which is a function to handle form submission.\r\n */\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const [city, setCity] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Call the onSubmit prop with the form data\r\n    onSubmit({ fullName, email, mobileNumber, city });\r\n    // Clear form fields after submission\r\n    setFullName('');\r\n    setEmail('');\r\n    setMobileNumber('');\r\n    setCity('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-form-container\">\r\n      <h2 className=\"text-center\">Get a Free Consultation</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter Email Address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"tel\" // Use tel for phone numbers\r\n            placeholder=\"Mobile Number\"\r\n            value={mobileNumber}\r\n            onChange={(e) => setMobileNumber(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Area, City\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"contact-form-button\">\r\n          Get Quick Quote\r\n        </button>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA;;;CAGC,GACD,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;IAC/B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,4CAA4C;QAC5C,SAAS;YAAE;YAAU;YAAO;YAAc;QAAK;QAC/C,qCAAqC;QACrC,YAAY;QACZ,SAAS;QACT,gBAAgB;QAChB,QAAQ;IACV;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAAc;;;;;;0BAC5B,qKAAC;gBAAK,UAAU;;kCACd,qKAAC;kCACC,cAAA,qKAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,qKAAC;kCACC,cAAA,qKAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,qKAAC;kCACC,cAAA,qKAAC;4BACC,MAAK,MAAM,4BAA4B;;4BACvC,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4BAC/C,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,qKAAC;kCACC,cAAA,qKAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;4BACvC,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,qKAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAsB;;;;;;;;;;;;;;;;;;AAO9D;uCAEe","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/NewsletterForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n/**\r\n * NewsletterForm component allows users to subscribe with their email address.\r\n * It takes an 'onSubmit' prop, which is a function to handle email submission.\r\n */\r\nconst NewsletterForm = ({ onSubmit }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(email); // Pass the email to the onSubmit prop\r\n    setEmail(''); // Clear the input field\r\n  };\r\n\r\n  return (\r\n    <div className=\"newsletter-form-container\">\r\n      <h2 className=\"text-center\">Subscribe Us</h2>\r\n      <p>\r\n        Enter your email address to get the latest updates.\r\n      </p>\r\n      <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter Email Address\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"newsletter-form-input\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"newsletter-form-button\">\r\n          Subscribe\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsletterForm;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA;;;CAGC,GACD,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAE;IAClC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS,QAAQ,sCAAsC;QACvD,SAAS,KAAK,wBAAwB;IACxC;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAAc;;;;;;0BAC5B,qKAAC;0BAAE;;;;;;0BAGH,qKAAC;gBAAK,UAAU;gBAAc,OAAO;oBAAE,SAAS;oBAAQ,eAAe;oBAAU,YAAY;oBAAU,OAAO;gBAAO;;kCACnH,qKAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;wBACV,QAAQ;;;;;;kCAEV,qKAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAyB;;;;;;;;;;;;;;;;;;AAMjE;uCAEe","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/pages/index.js"],"sourcesContent":["import Head from 'next/head';\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link'; // Assuming you'll use Link for navigation\nimport Image from 'next/image'; // For optimized images\n\n// Import your components\nimport ProjectCard from '../components/ProjectCard';\nimport ClientCard from '../components/ClientCard';\nimport ContactForm from '../components/ContactForm';\nimport NewsletterForm from '../components/NewsletterForm';\n\nexport default function Home({ initialProjects, initialClients }) {\n  // Add console logs to see what initialProjects and initialClients are receiving\n  console.log('Home component rendering. initialProjects:', initialProjects);\n  console.log('Home component rendering. initialClients:', initialClients);\n\n  // Initialize state with a fallback to an empty array to prevent 'undefined' issues\n  const [projects, setProjects] = useState(initialProjects || []);\n  const [clients, setClients] = useState(initialClients || []);\n\n  // In a real app, you'd handle form submissions here and re-fetch data or update state\n  const handleContactSubmit = async (formData) => {\n    try {\n      const res = await fetch('http://localhost:5000/api/contacts', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (res.ok) {\n        // Use a custom message box instead of alert()\n        console.log('Contact form submitted successfully!');\n        // You might want to show a success message on the UI\n      } else {\n        const errorData = await res.json();\n        console.error('Failed to submit contact form:', errorData.msg || res.statusText);\n        // Show error message on the UI\n      }\n    } catch (error) {\n      console.error('Error submitting contact form:', error);\n      // Show error message on the UI\n    }\n  };\n\n  const handleNewsletterSubmit = async (email) => {\n    try {\n      const res = await fetch('http://localhost:5000/api/newsletter', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email }),\n      });\n      if (res.ok) {\n        console.log('Newsletter subscribed successfully!');\n        // Show success message on the UI\n      } else {\n        const errorData = await res.json();\n        console.error('Failed to subscribe to newsletter:', errorData.msg || res.statusText);\n        // Show error message on the UI\n      }\n    } catch (error) {\n      console.error('Error subscribing to newsletter:', error);\n      // Show error message on the UI\n    }\n  };\n\n  return (\n    <div className=\"main-layout\"> {/* Added a wrapper class for global styling */}\n      <Head>\n        <title>Fullstack Task</title>\n        <link rel=\"icon\" href=\"/4th year full stack Assets/Lead Generation Landing page (Images)/logo.png\" />\n      </Head>\n\n      {/* --- Header (Example - integrate your actual header structure) --- */}\n      <header className=\"header\">\n        <nav className=\"navbar container\">\n <Link href=\"/\" className=\"navbar-logo\">\n            <Image\n              src=\"/frontend/assets/logo.png\" // Path to your logo in the public directory\n              alt=\"Your Company Logo\"\n              width={150} // Adjust width as needed\n              height={40} // Adjust height as needed\n              priority // Prioritize loading for LCP (Largest Contentful Paint)\n            />\n          </Link>\n          {/* You might want to implement a mobile menu toggle here */}\n          <ul className=\"navbar-links\">\n            <li><Link href=\"/\">Home</Link></li>\n            <li><Link href=\"#projects\">Our Projects</Link></li>\n            <li><Link href=\"#clients\">Happy Clients</Link></li>\n            <li><Link href=\"#contact\">Contact</Link></li>\n            <li><Link href=\"#newsletter\">Subscribe</Link></li>\n          </ul>\n          <button className=\"navbar-button\">Get Quote</button>\n        </nav>\n      </header>\n\n      {/* --- Hero Section (Content from PDF reference image) --- */}\n      <section className=\"hero-section\">\n        <h1 className=\"hero-title\">Consultation, Design & Marketing</h1>\n        <p className=\"hero-subtitle\">Not Your Average Realtor</p>\n        <button className=\"hero-button\">Learn More</button>\n      </section>\n\n      {/* --- Why Choose Us? Section (Placeholder content based on PDF) --- */}\n      <section className=\"why-choose-us-section section-padding\">\n        <h2 className=\"text-center\">Why Choose Us?</h2>\n        <div className=\"reason-grid container\">\n          <div className=\"reason-item\">\n            <div className=\"icon\">💡</div> {/* Placeholder for icon */}\n            <h3>Innovative Solutions</h3>\n            <p>We provide cutting-edge solutions tailored to your unique needs and goals.</p>\n          </div>\n          <div className=\"reason-item\">\n            <div className=\"icon\">🤝</div> {/* Placeholder for icon */}\n            <h3>Client-Centric Approach</h3>\n            <p>Your success is our priority. We work closely with you every step of the way.</p>\n          </div>\n          <div className=\"reason-item\">\n            <div className=\"icon\">🚀</div> {/* Placeholder for icon */}\n            <h3>Proven Track Record</h3>\n            <p>Years of experience and a portfolio of successful projects speak for themselves.</p>\n          </div>\n        </div>\n      </section>\n\n      <main>\n        <section id=\"projects\" className=\"projects-section section-padding\">\n          <h2 className=\"text-center\">Our Projects</h2>\n          <div className=\"projects-grid container\">\n            {/* Ensure 'projects' is an array before mapping */}\n            {projects.length > 0 ? (\n              projects.map((project) => (\n                <ProjectCard key={project._id} project={project} />\n              ))\n            ) : (\n              <p>No projects found. Please add some from the admin panel.</p>\n            )}\n          </div>\n        </section>\n\n        <section id=\"clients\" className=\"clients-section section-padding\">\n          <h2 className=\"text-center\">Happy Clients</h2>\n          <div className=\"clients-grid container\">\n            {/* Ensure 'clients' is an array before mapping */}\n            {clients.length > 0 ? (\n              clients.map((client) => (\n                <ClientCard key={client._id} client={client} />\n              ))\n            ) : (\n              <p>No clients found. Please add some from the admin panel.</p>\n            )}\n          </div>\n        </section>\n\n        <section id=\"contact\" className=\"contact-section section-padding\">\n          <h2 className=\"text-center\">Get a Free Consultation</h2>\n          <ContactForm onSubmit={handleContactSubmit} />\n        </section>\n\n        <section id=\"newsletter\" className=\"newsletter-section section-padding\">\n          <h2 className=\"text-center\">Subscribe Us</h2>\n          <NewsletterForm onSubmit={handleNewsletterSubmit} />\n        </section>\n      </main>\n\n      {/* --- Footer --- */}\n      <footer className=\"footer\">\n        <div className=\"footer-content container\">\n          <div className=\"footer-copyright\">\n            &copy; {new Date().getFullYear()} Your Company. All rights reserved.\n          </div>\n          <div className=\"footer-social-icons\">\n            {/* Placeholder for social media icons */}\n            <a href=\"#\" aria-label=\"Facebook\">📘</a>\n            <a href=\"#\" aria-label=\"Twitter\">🐦</a>\n            <a href=\"#\" aria-label=\"LinkedIn\">💼</a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\n// getServerSideProps runs on the server side during each request\nexport async function getServerSideProps() {\n  let projects = [];\n  let clients = [];\n\n  try {\n    // Fetch Projects\n    const projectRes = await fetch('http://localhost:5000/api/projects');\n    if (!projectRes.ok) {\n      console.error(`getServerSideProps: Failed to fetch projects with status ${projectRes.status}`);\n      // If the response is not OK, it means there was a server error or no data\n      // We can still proceed with an empty array for projects\n    } else {\n      projects = await projectRes.json();\n    }\n    console.log('Fetched Projects in getServerSideProps:', projects);\n\n    // Fetch Clients\n    const clientRes = await fetch('http://localhost:5000/api/clients');\n    if (!clientRes.ok) {\n      console.error(`getServerSideProps: Failed to fetch clients with status ${clientRes.status}`);\n    } else {\n      clients = await clientRes.json();\n    }\n    console.log('Fetched Clients in getServerSideProps:', clients);\n\n  } catch (error) {\n    console.error('Error in getServerSideProps during data fetching:', error);\n    // If there's a network error or JSON parsing error, projects and clients will remain empty arrays\n  }\n\n  return {\n    props: {\n      initialProjects: projects,\n      initialClients: clients,\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}