{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/pages/admin/clients.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\n\r\n/**\r\n * ClientManagement component for the admin panel.\r\n * Allows adding new clients and viewing a list of existing clients.\r\n */\r\nconst ClientManagement = () => {\r\n  const [clients, setClients] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [designation, setDesignation] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [message, setMessage] = useState(''); // For success/error messages\r\n  const [messageType, setMessageType] = useState(''); // 'success' or 'error'\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  // Function to fetch all clients from the backend\r\n  const fetchClients = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/clients');\r\n      if (!res.ok) {\r\n        throw new Error(`HTTP error! status: ${res.status}`);\r\n      }\r\n      const data = await res.json();\r\n      setClients(data);\r\n    } catch (error) {\r\n      console.error('Error fetching clients:', error);\r\n      setMessage('Failed to fetch clients.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  // Function to handle adding a new client\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(''); // Clear previous messages\r\n    setMessageType('');\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('description', description);\r\n    formData.append('designation', designation);\r\n    if (image) {\r\n      formData.append('clientImage', image); // 'clientImage' must match the field name in multer middleware\r\n    } else {\r\n      setMessage('Please upload a client image.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/clients', {\r\n        method: 'POST',\r\n        body: formData, // No Content-Type header when sending FormData; browser sets it automatically\r\n      });\r\n\r\n      if (res.ok) {\r\n        setMessage('Client added successfully!');\r\n        setMessageType('success');\r\n        setName('');\r\n        setDescription('');\r\n        setDesignation('');\r\n        setImage(null);\r\n        // Clear file input visually\r\n        document.getElementById('clientImageInput').value = '';\r\n        fetchClients(); // Refresh the list of clients\r\n      } else {\r\n        const errorData = await res.json();\r\n        setMessage(`Failed to add client: ${errorData.msg || res.statusText}`);\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding client:', error);\r\n      setMessage('An error occurred while adding the client.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <Link href=\"/admin\" className=\"back-link\">‚Üê Back to Admin Dashboard</Link>\r\n      <h1 className=\"admin-header\">Client Management</h1>\r\n\r\n      {message && (\r\n        <div className={`admin-message ${messageType}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"admin-form-section\">\r\n        <h2>Add New Client</h2>\r\n        <form onSubmit={handleSubmit} className=\"admin-form-grid\">\r\n          <div>\r\n            <label htmlFor=\"clientName\">Client Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"clientName\"\r\n              placeholder=\"Client Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"admin-form-input\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"clientDesignation\">Designation:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"clientDesignation\"\r\n              placeholder=\"Client Designation (e.g., CEO, Designer)\"\r\n              value={designation}\r\n              onChange={(e) => setDesignation(e.target.value)}\r\n              className=\"admin-form-input\"\r\n              required\r\n            />\r\n          </div>\r\n          <div style={{ gridColumn: '1 / -1' }}> {/* Description spans full width */}\r\n            <label htmlFor=\"clientDescription\">Description:</label>\r\n            <textarea\r\n              id=\"clientDescription\"\r\n              placeholder=\"Client Testimonial or Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              className=\"admin-form-input\"\r\n              required\r\n            />\r\n          </div>\r\n          <div style={{ gridColumn: '1 / -1' }}> {/* Image input spans full width */}\r\n            <label htmlFor=\"clientImageInput\">Client Image:</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"clientImageInput\"\r\n              accept=\"image/*\"\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n              className=\"admin-form-input\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"admin-form-button\">Add Client</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"admin-table-section\">\r\n        <h2>Existing Clients</h2>\r\n        {clients.length === 0 ? (\r\n          <p className=\"text-center\">No clients found.</p>\r\n        ) : (\r\n          <div className=\"admin-table-wrapper\">\r\n            <table className=\"admin-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Image</th>\r\n                  <th>Name</th>\r\n                  <th>Designation</th>\r\n                  <th>Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {clients.map((client) => (\r\n                  <tr key={client._id}>\r\n                    <td>\r\n                      {client.imageUrl && (\r\n                        <Image\r\n                          src={`http://localhost:5000${client.imageUrl}`}\r\n                          alt={client.name}\r\n                          width={50}\r\n                          height={50}\r\n                          objectFit=\"cover\"\r\n                          className=\"admin-table-img\" // Add a class for images within tables\r\n                          onError={(e) => {\r\n                            e.target.onerror = null;\r\n                            e.target.src = `https://placehold.co/50x50/CCCCCC/000000?text=N/A`;\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td>{client.name}</td>\r\n                    <td>{client.designation}</td>\r\n                    <td>{client.description}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientManagement;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}