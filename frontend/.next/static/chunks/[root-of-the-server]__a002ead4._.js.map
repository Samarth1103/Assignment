{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void;\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: \"turbopack-connected\";\r\n    }\r\n  | {\r\n      type: \"turbopack-message\";\r\n      data: Record<string, any>;\r\n    };\r\n\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\r\n  sendMessage: SendMessage;\r\n  onUpdateError: (err: unknown) => void;\r\n};\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case \"turbopack-connected\":\r\n        handleSocketConnected(sendMessage);\r\n        break;\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage);\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage);\r\n          }\r\n          applyAggregatedUpdates();\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            \"[Fast Refresh] performing full reload\\n\\n\" +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\r\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\r\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\r\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\r\n          );\r\n          onUpdateError(e);\r\n          location.reload();\r\n        }\r\n        break;\r\n    }\r\n  });\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error(\"A separate HMR handler was already registered\");\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    },\r\n  };\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>;\r\n  unsubscribe: () => void;\r\n};\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message));\r\n}\r\n\r\ntype ResourceKey = string;\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  });\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: \"turbopack-subscribe\",\r\n    ...resource,\r\n  });\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: \"turbopack-unsubscribe\",\r\n      ...resource,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key));\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map();\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  let aggregated = chunkListsWithPendingUpdates.get(key);\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    );\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg);\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return;\r\n  hooks.beforeRefresh();\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg);\r\n  }\r\n  chunkListsWithPendingUpdates.clear();\r\n  finalizeUpdate();\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks;\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks;\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks;\r\n  }\r\n\r\n  let merged;\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged;\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0];\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        );\r\n      }\r\n\r\n      merged = [update];\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged;\r\n  }\r\n\r\n  return {\r\n    type: \"ChunkListUpdate\",\r\n    chunks,\r\n    merged,\r\n  };\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\r\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"partial\") {\r\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  if (updateB.type === \"partial\") {\r\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\r\n\r\n  return {\r\n    type: \"EcmascriptMergedUpdate\",\r\n    entries,\r\n    chunks,\r\n  };\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB };\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB;\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA;\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      );\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\r\n    // These two completely cancel each other out.\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\r\n    const added = [];\r\n    const deleted = [];\r\n    const deletedModules = new Set(updateA.modules ?? []);\r\n    const addedModules = new Set(updateB.modules ?? []);\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId);\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId);\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added,\r\n      deleted,\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ]);\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ]);\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId);\r\n    }\r\n\r\n    return {\r\n      type: \"added\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? []);\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"deleted\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`);\r\n}\r\n\r\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length;\r\n  const bI = list.indexOf(b) + 1 || list.length;\r\n  return aI - bI;\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\r\n\r\nfunction emitIssues() {\r\n  const issues = [];\r\n  const deduplicationSet = new Set();\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\r\n\r\n      issues.push(chunkIssue);\r\n      deduplicationSet.add(chunkIssue.formatted);\r\n    }\r\n  }\r\n\r\n  sortIssues(issues);\r\n\r\n  hooks.issues(issues);\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource);\r\n  let hasCriticalIssues = false;\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true;\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues);\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key);\r\n  }\r\n\r\n  emitIssues();\r\n\r\n  return hasCriticalIssues;\r\n}\r\n\r\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\r\nconst CATEGORY_ORDER = [\r\n  \"parse\",\r\n  \"resolve\",\r\n  \"code generation\",\r\n  \"rendering\",\r\n  \"typescript\",\r\n  \"other\",\r\n];\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\r\n    if (first !== 0) return first;\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\r\n  });\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n};\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks);\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues);\r\n\r\n  handleIssues(msg);\r\n\r\n  switch (msg.type) {\r\n    case \"issues\":\r\n      // issues are already handled\r\n      break;\r\n    case \"partial\":\r\n      // aggregate updates\r\n      aggregateUpdates(msg);\r\n      break;\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\r\n      if (runHooks) hooks.beforeRefresh();\r\n      triggerUpdate(msg);\r\n      if (runHooks) finalizeUpdate();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh();\r\n  hooks.buildOk();\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB();\r\n    globalThis.__NEXT_HMR_CB = null;\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  );\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource);\r\n  let callbackSet: UpdateCallbackSet;\r\n  const existingCallbackSet = updateCallbackSets.get(key);\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    };\r\n    updateCallbackSets.set(key, callbackSet);\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback);\r\n    callbackSet = existingCallbackSet;\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback);\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe();\r\n      updateCallbackSets.delete(key);\r\n    }\r\n  };\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  const callbackSet = updateCallbackSets.get(key);\r\n  if (!callbackSet) {\r\n    return;\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg);\r\n  }\r\n\r\n  if (msg.type === \"notFound\") {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/ProjectCard.js"],"sourcesContent":["import Image from 'next/image';\r\n\r\n/**\r\n * ProjectCard component displays a single project's information.\r\n * It takes a 'project' object as a prop, which should contain:\r\n * - _id: Unique identifier (for key prop)\r\n * - name: Project's name\r\n * - description: Project's description\r\n * - imageUrl: URL to the stored image\r\n */\r\nconst ProjectCard = ({ project }) => {\r\n  return (\r\n    <div className=\"project-card\">\r\n      {/* Use Image component for optimization */}\r\n      <Image\r\n        src={`http://localhost:5000${project.imageUrl}`} // Ensure this matches your backend's image serving path\r\n        alt={project.name}\r\n        width={450} // Width after cropping (as per requirement example)\r\n        height={350} // Height after cropping (as per requirement example)\r\n        className=\"project-card-image\" // Apply image class\r\n        onError={(e) => {\r\n          e.target.onerror = null; // Prevents infinite loop if fallback also fails\r\n          e.target.src = `https://placehold.co/450x350/CCCCCC/000000?text=No+Image`; // Fallback placeholder\r\n        }}\r\n      />\r\n      <div className=\"project-card-content\">\r\n        <h3>{project.name}</h3>\r\n        <p>{project.description}</p>\r\n        <button className=\"project-card-button\" disabled>Read More</button> {/* Dummy button */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA;;;;;;;CAOC,GACD,MAAM,cAAc,CAAC,EAAE,OAAO,EAAE;IAC9B,qBACE,0JAAC;QAAI,WAAU;;0BAEb,0JAAC,yHAAA,CAAA,UAAK;gBACJ,KAAK,CAAC,qBAAqB,EAAE,QAAQ,QAAQ,EAAE;gBAC/C,KAAK,QAAQ,IAAI;gBACjB,OAAO;gBACP,QAAQ;gBACR,WAAU,qBAAqB,oBAAoB;;gBACnD,SAAS,CAAC;oBACR,EAAE,MAAM,CAAC,OAAO,GAAG,MAAM,gDAAgD;oBACzE,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,wDAAwD,CAAC,EAAE,uBAAuB;gBACpG;;;;;;0BAEF,0JAAC;gBAAI,WAAU;;kCACb,0JAAC;kCAAI,QAAQ,IAAI;;;;;;kCACjB,0JAAC;kCAAG,QAAQ,WAAW;;;;;;kCACvB,0JAAC;wBAAO,WAAU;wBAAsB,QAAQ;kCAAC;;;;;;oBAAkB;;;;;;;;;;;;;AAI3E;KAtBM;uCAwBS","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/ClientCard.js"],"sourcesContent":["import Image from 'next/image';\r\n\r\n/**\r\n * ClientCard component displays a single client's information.\r\n * It takes a 'client' object as a prop, which should contain:\r\n * - _id: Unique identifier (for key prop)\r\n * - name: Client's name\r\n * - description: Client's testimonial or brief\r\n * - designation: Client's job title/designation\r\n * - imageUrl: URL to the stored image\r\n */\r\nconst ClientCard = ({ client }) => {\r\n  return (\r\n    <div className=\"client-card\">\r\n      {/* Image component for optimized image loading */}\r\n      <div className=\"client-card-image-container\">\r\n        <Image\r\n          src={`http://localhost:5000${client.imageUrl}`} // Ensure this matches your backend's image serving path\r\n          alt={client.name}\r\n          width={100}\r\n          height={100}\r\n          objectFit=\"cover\" // Ensures the image covers the circular area\r\n          onError={(e) => {\r\n            e.target.onerror = null; // Prevents infinite loop if fallback also fails\r\n            e.target.src = `https://placehold.co/100x100/CCCCCC/000000?text=No+Image`; // Fallback placeholder\r\n          }}\r\n        />\r\n      </div>\r\n      <p className=\"client-card-description\">\"{client.description}\"</p>\r\n      <h3 className=\"client-card-name\">{client.name}</h3>\r\n      <p className=\"client-card-designation\">{client.designation}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA;;;;;;;;CAQC,GACD,MAAM,aAAa,CAAC,EAAE,MAAM,EAAE;IAC5B,qBACE,0JAAC;QAAI,WAAU;;0BAEb,0JAAC;gBAAI,WAAU;0BACb,cAAA,0JAAC,yHAAA,CAAA,UAAK;oBACJ,KAAK,CAAC,qBAAqB,EAAE,OAAO,QAAQ,EAAE;oBAC9C,KAAK,OAAO,IAAI;oBAChB,OAAO;oBACP,QAAQ;oBACR,WAAU,QAAQ,6CAA6C;;oBAC/D,SAAS,CAAC;wBACR,EAAE,MAAM,CAAC,OAAO,GAAG,MAAM,gDAAgD;wBACzE,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,wDAAwD,CAAC,EAAE,uBAAuB;oBACpG;;;;;;;;;;;0BAGJ,0JAAC;gBAAE,WAAU;;oBAA0B;oBAAE,OAAO,WAAW;oBAAC;;;;;;;0BAC5D,0JAAC;gBAAG,WAAU;0BAAoB,OAAO,IAAI;;;;;;0BAC7C,0JAAC;gBAAE,WAAU;0BAA2B,OAAO,WAAW;;;;;;;;;;;;AAGhE;KAtBM;uCAwBS","debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/ContactForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n/**\r\n * ContactForm component allows users to submit their contact details.\r\n * It takes an 'onSubmit' prop, which is a function to handle form submission.\r\n */\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const [city, setCity] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Call the onSubmit prop with the form data\r\n    onSubmit({ fullName, email, mobileNumber, city });\r\n    // Clear form fields after submission\r\n    setFullName('');\r\n    setEmail('');\r\n    setMobileNumber('');\r\n    setCity('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-form-container\">\r\n      <h2 className=\"text-center\">Get a Free Consultation</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter Email Address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"tel\" // Use tel for phone numbers\r\n            placeholder=\"Mobile Number\"\r\n            value={mobileNumber}\r\n            onChange={(e) => setMobileNumber(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Area, City\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            className=\"contact-form-input\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"contact-form-button\">\r\n          Get Quick Quote\r\n        </button>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"names":[],"mappings":";;;;AAAA;;;;AAEA;;;CAGC,GACD,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;;IAC/B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,4CAA4C;QAC5C,SAAS;YAAE;YAAU;YAAO;YAAc;QAAK;QAC/C,qCAAqC;QACrC,YAAY;QACZ,SAAS;QACT,gBAAgB;QAChB,QAAQ;IACV;IAEA,qBACE,0JAAC;QAAI,WAAU;;0BACb,0JAAC;gBAAG,WAAU;0BAAc;;;;;;0BAC5B,0JAAC;gBAAK,UAAU;;kCACd,0JAAC;kCACC,cAAA,0JAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,0JAAC;kCACC,cAAA,0JAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,0JAAC;kCACC,cAAA,0JAAC;4BACC,MAAK,MAAM,4BAA4B;;4BACvC,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4BAC/C,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,0JAAC;kCACC,cAAA,0JAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;4BACvC,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,0JAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAsB;;;;;;;;;;;;;;;;;;AAO9D;GApEM;KAAA;uCAsES","debugId":null}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/components/NewsletterForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n/**\r\n * NewsletterForm component allows users to subscribe with their email address.\r\n * It takes an 'onSubmit' prop, which is a function to handle email submission.\r\n */\r\nconst NewsletterForm = ({ onSubmit }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(email); // Pass the email to the onSubmit prop\r\n    setEmail(''); // Clear the input field\r\n  };\r\n\r\n  return (\r\n    <div className=\"newsletter-form-container\">\r\n      <h2 className=\"text-center\">Subscribe Us</h2>\r\n      <p>\r\n        Enter your email address to get the latest updates.\r\n      </p>\r\n      <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter Email Address\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"newsletter-form-input\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"newsletter-form-button\">\r\n          Subscribe\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsletterForm;\r\n"],"names":[],"mappings":";;;;AAAA;;;;AAEA;;;CAGC,GACD,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAE;;IAClC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS,QAAQ,sCAAsC;QACvD,SAAS,KAAK,wBAAwB;IACxC;IAEA,qBACE,0JAAC;QAAI,WAAU;;0BACb,0JAAC;gBAAG,WAAU;0BAAc;;;;;;0BAC5B,0JAAC;0BAAE;;;;;;0BAGH,0JAAC;gBAAK,UAAU;gBAAc,OAAO;oBAAE,SAAS;oBAAQ,eAAe;oBAAU,YAAY;oBAAU,OAAO;gBAAO;;kCACnH,0JAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;wBACV,QAAQ;;;;;;kCAEV,0JAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAyB;;;;;;;;;;;;;;;;;;AAMjE;GA9BM;KAAA;uCAgCS","debugId":null}},
    {"offset": {"line": 895, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TARMAL/assignment/frontend/pages/index.js"],"sourcesContent":["import Head from 'next/head';\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link'; // Assuming you'll use Link for navigation\nimport Image from 'next/image'; // For optimized images\n\n// Import your components\nimport ProjectCard from '../components/ProjectCard';\nimport ClientCard from '../components/ClientCard';\nimport ContactForm from '../components/ContactForm';\nimport NewsletterForm from '../components/NewsletterForm';\n\nexport default function Home({ initialProjects, initialClients }) {\n  // Add console logs to see what initialProjects and initialClients are receiving\n  console.log('Home component rendering. initialProjects:', initialProjects);\n  console.log('Home component rendering. initialClients:', initialClients);\n\n  // Initialize state with a fallback to an empty array to prevent 'undefined' issues\n  const [projects, setProjects] = useState(initialProjects || []);\n  const [clients, setClients] = useState(initialClients || []);\n\n  // In a real app, you'd handle form submissions here and re-fetch data or update state\n  const handleContactSubmit = async (formData) => {\n    try {\n      const res = await fetch('http://localhost:5000/api/contacts', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (res.ok) {\n        // Use a custom message box instead of alert()\n        console.log('Contact form submitted successfully!');\n        // You might want to show a success message on the UI\n      } else {\n        const errorData = await res.json();\n        console.error('Failed to submit contact form:', errorData.msg || res.statusText);\n        // Show error message on the UI\n      }\n    } catch (error) {\n      console.error('Error submitting contact form:', error);\n      // Show error message on the UI\n    }\n  };\n\n  const handleNewsletterSubmit = async (email) => {\n    try {\n      const res = await fetch('http://localhost:5000/api/newsletter', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email }),\n      });\n      if (res.ok) {\n        console.log('Newsletter subscribed successfully!');\n        // Show success message on the UI\n      } else {\n        const errorData = await res.json();\n        console.error('Failed to subscribe to newsletter:', errorData.msg || res.statusText);\n        // Show error message on the UI\n      }\n    } catch (error) {\n      console.error('Error subscribing to newsletter:', error);\n      // Show error message on the UI\n    }\n  };\n\n  return (\n    <div className=\"main-layout\"> {/* Added a wrapper class for global styling */}\n      <Head>\n        <title>Fullstack Task</title>\n        <link rel=\"icon\" href=\"/4th year full stack Assets/Lead Generation Landing page (Images)/logo.png\" />\n      </Head>\n\n      {/* --- Header (Example - integrate your actual header structure) --- */}\n      <header className=\"header\">\n        <nav className=\"navbar container\">\n <Link href=\"/\" className=\"navbar-logo\">\n            <Image\n              src=\"/frontend/assets/logo.png\" // Path to your logo in the public directory\n              alt=\"Your Company Logo\"\n              width={150} // Adjust width as needed\n              height={40} // Adjust height as needed\n              priority // Prioritize loading for LCP (Largest Contentful Paint)\n            />\n          </Link>\n          {/* You might want to implement a mobile menu toggle here */}\n          <ul className=\"navbar-links\">\n            <li><Link href=\"/\">Home</Link></li>\n            <li><Link href=\"#projects\">Our Projects</Link></li>\n            <li><Link href=\"#clients\">Happy Clients</Link></li>\n            <li><Link href=\"#contact\">Contact</Link></li>\n            <li><Link href=\"#newsletter\">Subscribe</Link></li>\n          </ul>\n          <button className=\"navbar-button\">Get Quote</button>\n        </nav>\n      </header>\n\n      {/* --- Hero Section (Content from PDF reference image) --- */}\n      <section className=\"hero-section\">\n        <h1 className=\"hero-title\">Consultation, Design & Marketing</h1>\n        <p className=\"hero-subtitle\">Not Your Average Realtor</p>\n        <button className=\"hero-button\">Learn More</button>\n      </section>\n\n      {/* --- Why Choose Us? Section (Placeholder content based on PDF) --- */}\n      <section className=\"why-choose-us-section section-padding\">\n        <h2 className=\"text-center\">Why Choose Us?</h2>\n        <div className=\"reason-grid container\">\n          <div className=\"reason-item\">\n            <div className=\"icon\">💡</div> {/* Placeholder for icon */}\n            <h3>Innovative Solutions</h3>\n            <p>We provide cutting-edge solutions tailored to your unique needs and goals.</p>\n          </div>\n          <div className=\"reason-item\">\n            <div className=\"icon\">🤝</div> {/* Placeholder for icon */}\n            <h3>Client-Centric Approach</h3>\n            <p>Your success is our priority. We work closely with you every step of the way.</p>\n          </div>\n          <div className=\"reason-item\">\n            <div className=\"icon\">🚀</div> {/* Placeholder for icon */}\n            <h3>Proven Track Record</h3>\n            <p>Years of experience and a portfolio of successful projects speak for themselves.</p>\n          </div>\n        </div>\n      </section>\n\n      <main>\n        <section id=\"projects\" className=\"projects-section section-padding\">\n          <h2 className=\"text-center\">Our Projects</h2>\n          <div className=\"projects-grid container\">\n            {/* Ensure 'projects' is an array before mapping */}\n            {projects.length > 0 ? (\n              projects.map((project) => (\n                <ProjectCard key={project._id} project={project} />\n              ))\n            ) : (\n              <p>No projects found. Please add some from the admin panel.</p>\n            )}\n          </div>\n        </section>\n\n        <section id=\"clients\" className=\"clients-section section-padding\">\n          <h2 className=\"text-center\">Happy Clients</h2>\n          <div className=\"clients-grid container\">\n            {/* Ensure 'clients' is an array before mapping */}\n            {clients.length > 0 ? (\n              clients.map((client) => (\n                <ClientCard key={client._id} client={client} />\n              ))\n            ) : (\n              <p>No clients found. Please add some from the admin panel.</p>\n            )}\n          </div>\n        </section>\n\n        <section id=\"contact\" className=\"contact-section section-padding\">\n          <h2 className=\"text-center\">Get a Free Consultation</h2>\n          <ContactForm onSubmit={handleContactSubmit} />\n        </section>\n\n        <section id=\"newsletter\" className=\"newsletter-section section-padding\">\n          <h2 className=\"text-center\">Subscribe Us</h2>\n          <NewsletterForm onSubmit={handleNewsletterSubmit} />\n        </section>\n      </main>\n\n      {/* --- Footer --- */}\n      <footer className=\"footer\">\n        <div className=\"footer-content container\">\n          <div className=\"footer-copyright\">\n            &copy; {new Date().getFullYear()} Your Company. All rights reserved.\n          </div>\n          <div className=\"footer-social-icons\">\n            {/* Placeholder for social media icons */}\n            <a href=\"#\" aria-label=\"Facebook\">📘</a>\n            <a href=\"#\" aria-label=\"Twitter\">🐦</a>\n            <a href=\"#\" aria-label=\"LinkedIn\">💼</a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\n// getServerSideProps runs on the server side during each request\nexport async function getServerSideProps() {\n  let projects = [];\n  let clients = [];\n\n  try {\n    // Fetch Projects\n    const projectRes = await fetch('http://localhost:5000/api/projects');\n    if (!projectRes.ok) {\n      console.error(`getServerSideProps: Failed to fetch projects with status ${projectRes.status}`);\n      // If the response is not OK, it means there was a server error or no data\n      // We can still proceed with an empty array for projects\n    } else {\n      projects = await projectRes.json();\n    }\n    console.log('Fetched Projects in getServerSideProps:', projects);\n\n    // Fetch Clients\n    const clientRes = await fetch('http://localhost:5000/api/clients');\n    if (!clientRes.ok) {\n      console.error(`getServerSideProps: Failed to fetch clients with status ${clientRes.status}`);\n    } else {\n      clients = await clientRes.json();\n    }\n    console.log('Fetched Clients in getServerSideProps:', clients);\n\n  } catch (error) {\n    console.error('Error in getServerSideProps during data fetching:', error);\n    // If there's a network error or JSON parsing error, projects and clients will remain empty arrays\n  }\n\n  return {\n    props: {\n      initialProjects: projects,\n      initialClients: clients,\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1498, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}